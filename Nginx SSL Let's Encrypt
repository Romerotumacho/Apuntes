****Prerrequisitos*********https://linuxize.com/post/secure-nginx-with-let-s-encrypt-on-ubuntu-16-04/
* tener un nombre de dominio que apunta a la IP de tu servidor público. En este tutorial utilizaremos example.com.
* tener Nginx instalado

sudo apt update                                     *actualiza
sudo apt install software-properties-common         *Agrega repositorios
sudo add-apt-repository ppa:certbot/certbot         *agrega repositorio de Certbot utilitario de python que automatiza renovacion de SSL
sudo apt update
sudo apt install certbot                            *Instala cerbot
sudo openssl dhparam -out /etc/ssl/certs/dhparam.pem 2048         *Genera intercambio de claves para fortalecer la seguridad

mkdir -p /var/lib/letsencrypt/.well-known
chgrp www-data /var/lib/letsencrypt
chmod g+s /var/lib/letsencrypt

**********/etc/nginx/snippets/letsencrypt.conf*********** Crear estos archivos
**********************************************
location ^~ /.well-known/acme-challenge/ {
  allow all;
  root /var/lib/letsencrypt/;
  default_type "text/plain";
  try_files $uri =404;
}
***********************************************
***********/etc/nginx/snippets/ssl.conf***************
***********************************************
ssl_dhparam /etc/ssl/certs/dhparam.pem;

ssl_session_timeout 1d;
ssl_session_cache shared:SSL:50m;
ssl_session_tickets off;

ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
ssl_ciphers 'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS';
ssl_prefer_server_ciphers on;

ssl_stapling on;
ssl_stapling_verify on;
resolver 8.8.8.8 8.8.4.4 valid=300s;
resolver_timeout 30s;

add_header Strict-Transport-Security "max-age=15768000; includeSubdomains; preload";
add_header X-Frame-Options SAMEORIGIN;
add_header X-Content-Type-Options nosniff;

*************************************************
**********/etc/nginx/sites-available/example.com.conf**********
***************************************
server {
  listen 80;
  server_name example.com www.example.com;

  include snippets/letsencrypt.conf;
}
****************************************
**Activar el enlace simbolido****

sudo ln -s /etc/nginx/sites-available/example.com.conf /etc/nginx/sites-enabled/example.com.conf
sudo systemctl reload nginx         ****Para que cambios surtan efecto******* y Luego obtengo el certificado**************
sudo certbot certonly --agree-tos --email admin@example.com --webroot -w /var/lib/letsencrypt/ -d example.com -d www.example.com  

************************ edite el archivo *************
*************/etc/nginx/sites-available/example.com.conf**********
*******************************************************
server {
    listen 80;
    server_name www.example.com example.com;

    include snippets/letsencrypt.conf;
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl http2;
    server_name www.example.com;

    ssl_certificate /etc/letsencrypt/live/example.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/example.com/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/example.com/chain.pem;
    include snippets/ssl.conf;
    include snippets/letsencrypt.conf;

    return 301 https://example.com$request_uri;
}

server {
    listen 443 ssl http2;
    server_name example.com;

    ssl_certificate /etc/letsencrypt/live/example.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/example.com/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/example.com/chain.pem;
    include snippets/ssl.conf;
    include snippets/letsencrypt.conf;

    # . . . other code
}

********************************************************************

********Para que los cambios surtan efecto********
sudo systemctl reload nginx

******Crear el siguiente archivo para que cada 90 días renueve los certificados SSL****************************
************/etc/cron.d/certbot*********************
0 */12 * * * root test -x /usr/bin/certbot -a \! -d /run/systemd/system && perl -e 'sleep int(rand(3600))' && certbot -q renew --renew-hook "systemctl reload nginx"

****************************************************

sudo certbot renew --dry-run          *Para probar el proceso de renovación, si no hay errores la renovacion fue exitosa





*******************************************************
